#!/usr/bin/env groovy
import hudson.model.*
import hudson.EnvVars
import groovy.json.JsonSlurperClassic
import groovy.json.JsonBuilder
import groovy.json.JsonOutput
import java.net.URL
try {

node{
 stage('Checkout') {
 git 'https://github.com/edureka-git/DevOpsClassCodes'

 }
 stage('Build') {
 dir('') {
     withMaven(
        // Maven installation declared in the Jenkins "Global Tool Configuration"
        maven: 'M3'){
     sh 'mvn -B -V -U -e clean package'
        }
 }
 }
stage ('Email') { 
emailext attachLog: true, body: 'The status of the build can be obtained from the build log attached', subject: 'The build update is ', to: 'anjurose.d@gmail.com'
}
stage('Deployment') {
 // Deployment
 script {
 echo "deployment"
 sh 'cp /var/lib/jenkins/workspace/AddressbookPipeline/target/addressbook.war /opt/tomcat/webapps/'
 }
 }
 stage('clean up') {
 echo "cleaning up the workspace"
 // cleanWs()
 }
}// node
} // try end
finally {


(currentBuild.result != "ABORTED") && node("master") {
 // Send e-mail notifications for failed or unstable builds.
 // currentBuild.result must be non-null for this step to work.
 step([$class: 'Mailer',
 notifyEveryUnstableBuild: true,
 recipients: 'some email id',
 sendToIndividuals: true])
}
}